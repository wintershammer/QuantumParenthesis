(load "./quantumAlgos/generator.qsch")
(load "./quantumAlgos/operators.qsch")
(load "./quantumAlgos/standardLib.qsch")


(define (f1 x)
	(if (= x (list 1 0))
		(list 0 1)
		(list 1 0)))

(define (addMod2 qubit0 qubit1)
	(if (= qubit0 qubit1)
		(list 1 0)
		(list 0 1)))

(define (Uf1 qubit0 qubit1)
	(tensor qubit0 (addMod2 qubit1 (f1 qubit0))))



(define (deutsch f)
	(let (	(qubit0 (list 1 0))
			(qubit1 (list 0 1))
			(H (generator hadamard 2))
			(I (generator identity 2))
			(U (generatorBi Uf1 2)))

	(subsystems		
		(applyListOfOp 	(list
							(tensor H I)
							U
							(tensor H H))
						(tensor qubit0 qubit1))
		(list 1 1))))